{"version":3,"file":"js/chunk-93b7d.js","mappings":"+HAGA,IAAIA,EAcG,SAASC,EAAgBC,GAC9B,MAAMC,EAASD,EACZE,KACEC,GAAO,qBACDA,EAAEC,kCAAkCD,EAAEE,2BACtCF,EAAEC,4DAAmDD,EAAEG,wDACtCH,EAAEI,uBAG3BC,KAAK,IACRV,EAAUW,KAAKR,EAChB,CApBCH,EAAYY,IAAE,SAASC,SCPG,4BDOwBC,SAAS,Q,sBENtDC,eAAeC,EAAUC,EAAMC,GAOpC,aANmBC,IAAAA,IAAU,cAAe,CAC1CC,OAAQ,CACNH,OACAI,KAAMH,MAGEI,IACb,CCTD,SAAgB,MAAQ,2BAA2B,SAAW,2BAA2B,OAAS,4BCIlG,IAAItB,EAgBG,SAASuB,EAAaN,EAAMC,EAAOM,GAOxC,SAASC,EAAUC,EAAMC,EAAQC,GAC/B,MAAMC,EAAOjB,IAAE,UAAUE,SAASd,GAAW0B,KAAKA,GAC5CI,EAAYC,EAAOJ,GACzBE,EAAKhB,SAASiB,GAEC,KAAXH,GACFE,EAAKG,GAAG,SAASjB,iBAEf,MAAMkB,QAAajB,EAAUY,EAAYV,GAEzCjB,EAAgBgC,EAAKX,KAAKY,WAE1BX,EAAaK,EAAYV,EAAOe,EAAKX,KAAKa,WAC3C,GAEJ,CArBDnC,EAAUoC,QAsBV,MAAMC,EAAaC,KAAKC,KAAKf,EAAQN,GAErCO,EAAU,KAAe,IAATR,EAAa,WAAa,GAAI,GAE9CQ,EAAU,MAAgB,IAATR,EAAa,WAAa,GAAIA,EAAO,GAGtD,IAAIuB,EAAMF,KAAKG,MAAMxB,EAAOyB,GAC5BF,EAAM,IAAMA,EAAM,GAClB,IAAIG,EAAMH,EAHO,GAGU,EAC3BG,EAAMN,IAAeM,EAAMN,GAC3B,IAAK,IAAIO,EAAIJ,EAAKI,GAAKD,EAAKC,IAC1BnB,EAAUmB,EAAGA,IAAM3B,EAAO,SAAW,GAAI2B,GAI3CnB,EAAU,MAAOR,IAASoB,EAAa,WAAa,GAAIpB,EAAO,GAE/DQ,EAAU,KAAMR,IAASoB,EAAa,WAAa,GAAIA,EACxD,CArDCrC,EAAYY,IAAE,SAASC,SAASkB,EAAAA,OAAcjB,SAAS,QCNzDC,iBACE,MAAMkB,QAAajB,EAAU,EAAG,IAChCf,EAAgBgC,EAAKX,KAAKY,WAC1BX,EAAa,EAAG,GAAIU,EAAKX,KAAKa,WAC/B,CAEDU,E","sources":["webpack://movie-list/./src/movie/list/index.js","webpack://movie-list/./src/movie/list/index.module.less?bbc3","webpack://movie-list/./src/api/movie.js","webpack://movie-list/./src/movie/pager/index.module.less?10e2","webpack://movie-list/./src/movie/pager/index.js","webpack://movie-list/./src/movie/index.js"],"sourcesContent":["import $ from 'jquery';\r\nimport styles from './index.module.less';\r\n\r\nlet container;\r\n/**\r\n * 初始化函数，负责创建容器\r\n */\r\nfunction init() {\r\n  container = $('<div>').addClass(styles.container).appendTo('#app');\r\n}\r\n\r\ninit();\r\n\r\n/**\r\n * 根据传入的电影数组，创建元素，填充到容器中\r\n * @params movies 电影数组\r\n */\r\nexport function createMovieTags(movies) {\r\n  const result = movies\r\n    .map(\r\n      (m) => `<div>\r\n  <a href=\"${m.url}\" target=\"_blank\"><img src=\"${m.cover}\"></a>\r\n  <a href=\"${m.url}\" target=\"_blank\"><p class=\"${styles.title}\">${m.title}</p></a>\r\n  <p class=\"${styles.rate}\">${m.rate}</p>\r\n  </div>`\r\n    )\r\n    .join('');\r\n  container.html(result);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"uMz2yhYknFuJZRd7b7XJFA==\",\"title\":\"BtBUw2U6VLoA6+k4K3-z2Q==\",\"rate\":\"WNoS2RPDp8MiSjn5evxbFw==\"};","import axios from \"axios\";\r\n\r\nexport async function getMovies(page, limit) {\r\n  const resp = await axios.get(\"/api/movies\", {\r\n    params: {\r\n      page,\r\n      size: limit,\r\n    },\r\n  });\r\n  return resp.data;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pager\":\"Mu4wW1frNLWelaAKOB-EeQ==\",\"disabled\":\"WiANoHCkVXAr79WckRM0jQ==\",\"active\":\"Q6a1XbI2zmrVMT8ZicG8FA==\"};","import $ from 'jquery';\r\nimport styles from './index.module.less';\r\nimport { getMovies } from '@/api/movie';\r\nimport { createMovieTags } from '@/movie/list';\r\n\r\nlet container;\r\n/**\r\n * 初始化函数，负责创建容器\r\n */\r\nfunction init() {\r\n  container = $('<div>').addClass(styles.pager).appendTo('#app');\r\n}\r\n\r\ninit();\r\n\r\n/**\r\n * 根据传入的页码、页容量、总记录数，创建分页区域的标签\r\n * @params page 页码\r\n * @params limit 页容量\r\n * @params total 总页数\r\n */\r\nexport function createPagers(page, limit, total) {\r\n  container.empty();\r\n  /**\r\n   * 辅助函数，负责帮忙创建一个页码标签\r\n   * @params text 标签的文本\r\n   * @params status 标签的状态，空字符串-普通状态，disabled-禁用状态，active-选中状态\r\n   */\r\n  function createTag(text, status, targetPage) {\r\n    const span = $('<span>').appendTo(container).text(text);\r\n    const className = styles[status];\r\n    span.addClass(className);\r\n    // 只有是普通样式时才需要监听点击事件\r\n    if (status === '') {\r\n      span.on('click', async function () {\r\n        //1. 重新拿数据\r\n        const resp = await getMovies(targetPage, limit);\r\n        //2. 重新生成列表\r\n        createMovieTags(resp.data.movieList);\r\n        //3. 重新生成分页区域\r\n        createPagers(targetPage, limit, resp.data.movieTotal);\r\n      });\r\n    }\r\n  }\r\n  const pageNumber = Math.ceil(total / limit); // 最大页码\r\n  //1. 创建首页标签\r\n  createTag('首页', page === 1 ? 'disabled' : '', 1);\r\n  //2. 创建上一页标签\r\n  createTag('上一页', page === 1 ? 'disabled' : '', page - 1);\r\n  //3. 创建数字页码标签\r\n  const maxCount = 10; // 最大数字页码的数量\r\n  let min = Math.floor(page - maxCount / 2);\r\n  min < 1 && (min = 1);\r\n  let max = min + maxCount - 1;\r\n  max > pageNumber && (max = pageNumber);\r\n  for (let i = min; i <= max; i++) {\r\n    createTag(i, i === page ? 'active' : '', i);\r\n  }\r\n\r\n  //4. 创建下一页标签\r\n  createTag('下一页', page === pageNumber ? 'disabled' : '', page + 1);\r\n  //5. 创建尾页标签\r\n  createTag('尾页', page === pageNumber ? 'disabled' : '', pageNumber);\r\n}\r\n","import { createMovieTags } from \"./list\";\r\nimport { getMovies } from \"../api/movie\";\r\nimport { createPagers } from \"./pager\";\r\n\r\nasync function init() {\r\n  const resp = await getMovies(1, 30);\r\n  createMovieTags(resp.data.movieList); // 创建列表\r\n  createPagers(1, 30, resp.data.movieTotal); // 创建分页区域\r\n}\r\n\r\ninit();\r\n"],"names":["container","createMovieTags","movies","result","map","m","url","cover","title","rate","join","html","$","addClass","appendTo","async","getMovies","page","limit","axios","params","size","data","createPagers","total","createTag","text","status","targetPage","span","className","styles","on","resp","movieList","movieTotal","empty","pageNumber","Math","ceil","min","floor","maxCount","max","i","init"],"sourceRoot":""}